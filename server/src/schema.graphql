interface Measurement {
    solarpv: Float,
    wind: Float,
    solarthermal: Float,
    nuclear: Float,
    hidro: Float,
    inter: Float,
    thermal: Float,
    cogen: Float,
    gas: Float,
    carbon: Float,
}

type Instant implements Measurement {
    time: String!
    solarpv: Float,
    wind: Float,
    solarthermal: Float,
    nuclear: Float,
    hidro: Float,
    inter: Float,
    thermal: Float,
    cogen: Float,
    gas: Float,
    carbon: Float,
}

type Hour {
    hour: String!,
    pvpc: Float,
}

type Day implements Measurement {
    day: String!
    solarpv: Float,
    wind: Float,
    solarthermal: Float,
    nuclear: Float,
    hidro: Float,
    inter: Float,
    thermal: Float,
    cogen: Float,
    gas: Float,
    carbon: Float,
    emissions: Float,
    balanceFrance: Float,
    balanceMorocco: Float,
    balancePortugal: Float
}

type Month implements Measurement {
    month: String!
    solarpv: Float,
    wind: Float,
    solarthermal: Float,
    nuclear: Float,
    hidro: Float,
    inter: Float,
    thermal: Float,
    cogen: Float,
    gas: Float,
    carbon: Float,
    emissions: Float
    balanceFrance: Float,
    balanceMorocco: Float,
    balancePortugal: Float,
    installedWind: Float
    installedSolar: Float,
    installedCarbon: Float,
    installedHydro: Float,
    installedPumped: Float,
    installedThermalSolar: Float,
    installedNuclear: Float,
}

type Year implements Measurement {
    year: String!
    solarpv: Float,
    wind: Float,
    solarthermal: Float,
    nuclear: Float,
    hidro: Float,
    inter: Float,
    thermal: Float,
    cogen: Float,
    gas: Float,
    carbon: Float,
    emissions: Float,
    installedWind: Float
    installedSolar: Float,
    installedCarbon: Float,
    installedHydro: Float,
    installedPumped: Float,
    installedThermalSolar: Float,
    installedNuclear: Float,
    balanceFrance: Float,
    balanceMorocco: Float,
    balancePortugal: Float,
}

type RenewablesRecords {
    wind: [Record],
    solar: [Record],
}

type Record {
    time: String,
    value: Float
}

 type Query {
     latestInstant: Instant,
     oneYearAgoInstant: [Instant],
     latestInstantByDay(day: String): [Instant],
     latestHourly(count: Int): [Hour],
     latestDaily(count: Int): [Day],
     latestMonthly(count: Int): [Month],
     latestYearly(count: Int): [Year]
     latestDailyBalance(count: Int): [Day],
     latestMonthlyBalance(count: Int): [Month],
     latestYearlyBalance(count: Int): [Year]
     renewablesRecords: RenewablesRecords
 }
